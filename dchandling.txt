Dealing with stream inconsistencies (disconnects):

All client states should be in the following format:

def smystate():
  while <state-defining condition>:
    action = self.control.recv()
    if not action:
      <state cleanup>
      <falsify state-defining condition>
    elif action.istype(<legal action type>):
      handle
      <transition to new state if necessary>
      handle? not sure if this is safe on disconnect

Server-side:
  break on recv = None
    all states are incrementally popped off stack
    once Client.start() returns, client is removed from server client list
    
  *alternative: wrap entire client thread in exception catch
    need to make sure all states are resolved
      won't be a problem if we enforce tail transitions for all states?


Safety precautions:
  classes that open streams are also responsible for closing those streams
  when an object is created, all needed streams should be created in __init__ or
    passed in later. should not create streams in any other methods!